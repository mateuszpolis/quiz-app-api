# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Answer {
  answer_id: ID!
  question: Question!
  answer_text: String!
  answer_response: String
  is_correct: Boolean!
  order: Int
}

type UserAnswer {
  user_answer_id: ID!
  user: User!
  quiz: Quiz!
  question: Question!
  answer_ids: [ID!]
  answer_response: String
  sorted_answers: [ID!]
  score: Float!
}

type Question {
  question_id: ID!
  quiz: Quiz!
  points: Float!
  question_text: String!
  question_type: QuestionType!
  answers: [Answer!]
  user_anwers: [UserAnswer!]
}

enum QuestionType {
  single
  multiple
  sorting
  text
}

type QuizAccess {
  access_id: ID!
  quiz: Quiz!
  author: User!
  is_public: Boolean!
  users_with_access: [ID!]
}

type QuizResult {
  result_id: String!
  quiz: Quiz!
  author: User!
  score: Float!
  total: Float!
}

type Quiz {
  quiz_id: ID!
  quiz_name: String!
  description: String
  questions: [Question!]!
  access: [QuizAccess!]!
  quiz_results: [QuizResult!]!
  answers: [UserAnswer!]
}

type User {
  user_id: ID!
  username: String!
  email: String!
  role: String!
  quizzes: [Quiz!]
  access: [QuizAccess!]
  quiz_results: [Quiz!]
  answers: [UserAnswer!]
}

type SubmitQuizOutput {
  score: Float!
  total: Float!
  quiz_id: ID!
  user_id: ID!
}

type QuizResultsOutput {
  score: Float!
  total: Float!
  user: User!
  user_answers: [UserAnswer!]
}

type AnswerOutput {
  answer_id: ID!
  answer_text: String!
}

type QuestionOuptut {
  question_id: ID!
  points: Float!
  question_text: String!
  question_type: QuestionType!
  answers: [AnswerOutput!]
}

type Query {
  findAllUsers: [User!]!
  getQuestionsForQuiz(quiz_id: Float!, user_id: Float!): [QuestionOuptut!]!
  getQuizResultStudent(quiz_id: Float!, user_id: Float!): QuizResultsOutput!
  getQuizResultsTeacher(quiz_id: Float!, user_id: Float!): [QuizResultsOutput!]!
}

type Mutation {
  createUser(createUserInput: CreateUserInput!): User!
  removeUser(id: Float!): User!
  createQuiz(createQuizInput: CreateQuizInput!): ID!
  submitQuiz(submitAnswersInput: SubmitQuizInput!): SubmitQuizOutput!
}

input CreateUserInput {
  username: String!
  email: String!
  role: String!
}

input CreateQuizInput {
  quiz_name: String!
  author_id: ID!
  is_public: Boolean! = false
  users_with_access: [ID!]
  description: String
  questions: [QuestionInput!]!
}

input QuestionInput {
  question_text: String!
  question_type: QuestionType!
  points: Float! = 1
  answers: [AnswerInput!]!
}

input AnswerInput {
  answer_text: String!
  answer_response: String
  is_correct: Boolean = false
  order: Int
}

input SubmitQuizInput {
  user_id: ID!
  quiz_id: ID!
  answers: [SubmitAnswerInput!]!
}

input SubmitAnswerInput {
  question_id: Int!
  answer_ids: [Int!]
  answer_response: String
  sorted_answers: [Int!]
}